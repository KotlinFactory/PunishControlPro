<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>punishcontrol-plugin</artifactId>
  <build>
    <defaultGoal>clean verify -U</defaultGoal>
    <pluginManagement>
      <plugins>

        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.8.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>

        <plugin>
          <artifactId>maven-scm-publish-plugin</artifactId>
          <version>1.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <artifactSet>
            <includes>
              <!-- We want our other modules in our final jar-->
              <include>org.mineacademy:punishcontrol-spigot*</include>
              <include>org.mineacademy:punishcontrol-proxy*</include>
              <include>org.mineacademy:punishcontrol-core*</include>
              <include>org.mineacademy:punishcontrol-importers*</include>
              <include>org.reflections:reflections*</include>

              <!-- We want our libraries in our final jar -->
              <include>org.mineacademy.libraries:foundation*</include>
              <include>org.mineacademy.libararies:bungeefoundation*</include>
              <include>org.mineacademy:Protect*</include>
              <include>org.mineacademy.libraries:burst*</include>
              <include>org.mineacademy.plugins.external:mccommons:*</include>
              <include>org.mineacademy.plugins.external:protocolize:*</include>
              <include>de.leonhard:storage*</include>
              <include>com.github.JavaFactoryDev:LightningStorage*</include>
              <include>info.debatty:java-string-similarity*</include>
              <include>net.jcip:jcip-annotations*</include>
              <!-- Dependency Injection -->
              <include>com.google.dagger*</include>
              <include>javax.inject:javax.inject*</include>
            </includes>
          </artifactSet>
          <createDependencyReducedPom>false</createDependencyReducedPom>
          <relocations>
            <relocation>
              <pattern>de.leonhard.storage</pattern>
              <pattern>org.mineacademy.fo</pattern>
              <pattern>org.mineacademy.bfo</pattern>
              <pattern>de.exceptionflug.protocolize</pattern>
              <pattern>de.exceptionflug.mccommons</pattern>
              <shadedPattern>org.mineacademy.lib.storage</shadedPattern>
              <shadedPattern>org.mineacademy.${plugin.name}.lib</shadedPattern>
              <shadedPattern>org.mineacademy.${plugin.name}.lib</shadedPattern>
              <shadedPattern>org.mineacademy.lib.proto</shadedPattern>
              <shadedPattern>org.mineacademy.lib.mcc</shadedPattern>
            </relocation>
          </relocations>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.2.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
            <manifestEntries>
              <Built-By>${project.name} Development Team</Built-By>
              <Manifest-Version>${project.version}</Manifest-Version>
            </manifestEntries>
          </archive>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.1.2</version>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <!--                    <compilerId>eclipse</compilerId>-->
        </configuration>
        <dependencies>
          <dependency>
            <artifactId>plexus-compiler-eclipse</artifactId>
            <groupId>org.codehaus.plexus</groupId>
            <version>2.8.1</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
            <id>compile</id>
            <phase>compile</phase>
          </execution>
          <execution>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <id>testCompile</id>
            <phase>test-compile</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.8.1</version>
      </plugin>

      <plugin>
        <artifactId>proguard-maven-plugin</artifactId>
        <configuration>
          <libs>
            <lib>${java.home}/lib/rt.jar</lib>
            <lib>${java.home}/lib/jce.jar</lib>
          </libs>
        </configuration>
        <dependencies>
          <dependency>
            <artifactId>proguard-base</artifactId>
            <groupId>net.sf.proguard</groupId>
            <version>6.3.0beta1</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>proguard</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <groupId>com.github.wvengen</groupId>
        <version>2.2.0</version>
      </plugin>

      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.0.0-M1</version>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>
  <dependencies>
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <scope>provided</scope>
      <version>1.18.10</version>
    </dependency>

    <dependency>
      <artifactId>punishcontrol-core</artifactId>
      <groupId>org.mineacademy</groupId>
      <version>1.0.0</version>
    </dependency>

    <dependency>
      <artifactId>punishcontrol-importers</artifactId>
      <groupId>org.mineacademy</groupId>
      <version>1.0.0</version>
    </dependency>

    <dependency>
      <artifactId>punishcontrol-proxy</artifactId>
      <groupId>org.mineacademy</groupId>
      <version>1.0.0</version>
    </dependency>

    <dependency>
      <artifactId>punishcontrol-spigot</artifactId>
      <groupId>org.mineacademy</groupId>
      <version>1.0.0</version>
    </dependency>
  </dependencies>
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>punishcontrol</artifactId>
    <groupId>org.mineacademy</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <properties>
    <author>kangarko</author>
    <mainClass>${project.groupId}.${plugin.name}.${project.artifactId}</mainClass>
    <plugin.name>punishcontrol</plugin.name>

    <!-- Our main-classes-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <proxy.main>
      org.mineacademy.punishcontrol.proxy.PunishControl
    </proxy.main>
    <spigot.main>
      org.mineacademy.punishcontrol.spigot.PunishControl
    </spigot.main>
  </properties>

  <repositories>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <version>1.2.2</version>
</project>
